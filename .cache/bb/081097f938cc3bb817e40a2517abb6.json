{"id":"../../node_modules/core-js/modules/_regexp-exec-abstract.js","dependencies":[{"name":"D:\\learning-projects\\js\\natours\\package.json","includedInParent":true,"mtime":1738789525091},{"name":"D:\\learning-projects\\js\\natours\\node_modules\\core-js\\package.json","includedInParent":true,"mtime":1738582554313},{"name":"./_classof","loc":{"line":3,"column":22,"index":37},"parent":"D:\\learning-projects\\js\\natours\\node_modules\\core-js\\modules\\_regexp-exec-abstract.js","resolved":"D:\\learning-projects\\js\\natours\\node_modules\\core-js\\modules\\_classof.js"}],"generated":{"js":"'use strict';\n\nvar classof = require('./_classof');\nvar builtinExec = RegExp.prototype.exec;\n\n // `RegExpExec` abstract operation\n// https://tc39.github.io/ecma262/#sec-regexpexec\nmodule.exports = function (R, S) {\n  var exec = R.exec;\n  if (typeof exec === 'function') {\n    var result = exec.call(R, S);\n    if (typeof result !== 'object') {\n      throw new TypeError('RegExp exec method returned something other than an Object or null');\n    }\n    return result;\n  }\n  if (classof(R) !== 'RegExp') {\n    throw new TypeError('RegExp#exec called on incompatible receiver');\n  }\n  return builtinExec.call(R, S);\n};\n"},"sourceMaps":null,"error":null,"hash":"bc22bd03eecbdc4b162fd3bed2194a68","cacheData":{"env":{}}}