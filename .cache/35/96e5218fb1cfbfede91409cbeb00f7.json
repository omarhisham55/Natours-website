{"id":"../../node_modules/axios/lib/defaults/index.js","dependencies":[{"name":"D:\\learning-projects\\js\\natours\\package.json","includedInParent":true,"mtime":1738789525091},{"name":"D:\\learning-projects\\js\\natours\\node_modules\\axios\\package.json","includedInParent":true,"mtime":1737806351315},{"name":"../utils.js","loc":{"line":3,"column":18,"index":33},"parent":"D:\\learning-projects\\js\\natours\\node_modules\\axios\\lib\\defaults\\index.js","resolved":"D:\\learning-projects\\js\\natours\\node_modules\\axios\\lib\\utils.js"},{"name":"../core/AxiosError.js","loc":{"line":4,"column":23,"index":71},"parent":"D:\\learning-projects\\js\\natours\\node_modules\\axios\\lib\\defaults\\index.js","resolved":"D:\\learning-projects\\js\\natours\\node_modules\\axios\\lib\\core\\AxiosError.js"},{"name":"./transitional.js","loc":{"line":5,"column":33,"index":129},"parent":"D:\\learning-projects\\js\\natours\\node_modules\\axios\\lib\\defaults\\index.js","resolved":"D:\\learning-projects\\js\\natours\\node_modules\\axios\\lib\\defaults\\transitional.js"},{"name":"../helpers/toFormData.js","loc":{"line":6,"column":23,"index":173},"parent":"D:\\learning-projects\\js\\natours\\node_modules\\axios\\lib\\defaults\\index.js","resolved":"D:\\learning-projects\\js\\natours\\node_modules\\axios\\lib\\helpers\\toFormData.js"},{"name":"../helpers/toURLEncodedForm.js","loc":{"line":7,"column":29,"index":230},"parent":"D:\\learning-projects\\js\\natours\\node_modules\\axios\\lib\\defaults\\index.js","resolved":"D:\\learning-projects\\js\\natours\\node_modules\\axios\\lib\\helpers\\toURLEncodedForm.js"},{"name":"../platform/index.js","loc":{"line":8,"column":21,"index":285},"parent":"D:\\learning-projects\\js\\natours\\node_modules\\axios\\lib\\defaults\\index.js","resolved":"D:\\learning-projects\\js\\natours\\node_modules\\axios\\lib\\platform\\index.js"},{"name":"../helpers/formDataToJSON.js","loc":{"line":9,"column":27,"index":336},"parent":"D:\\learning-projects\\js\\natours\\node_modules\\axios\\lib\\defaults\\index.js","resolved":"D:\\learning-projects\\js\\natours\\node_modules\\axios\\lib\\helpers\\formDataToJSON.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _utils = _interopRequireDefault(require(\"../utils.js\"));\nvar _AxiosError = _interopRequireDefault(require(\"../core/AxiosError.js\"));\nvar _transitional = _interopRequireDefault(require(\"./transitional.js\"));\nvar _toFormData = _interopRequireDefault(require(\"../helpers/toFormData.js\"));\nvar _toURLEncodedForm = _interopRequireDefault(require(\"../helpers/toURLEncodedForm.js\"));\nvar _index = _interopRequireDefault(require(\"../platform/index.js\"));\nvar _formDataToJSON = _interopRequireDefault(require(\"../helpers/formDataToJSON.js\"));\nfunction _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }\n/**\n * It takes a string, tries to parse it, and if it fails, it returns the stringified version\n * of the input\n *\n * @param {any} rawValue - The value to be stringified.\n * @param {Function} parser - A function that parses a string into a JavaScript object.\n * @param {Function} encoder - A function that takes a value and returns a string.\n *\n * @returns {string} A stringified version of the rawValue.\n */\nfunction stringifySafely(rawValue, parser, encoder) {\n  if (_utils.default.isString(rawValue)) {\n    try {\n      (parser || JSON.parse)(rawValue);\n      return _utils.default.trim(rawValue);\n    } catch (e) {\n      if (e.name !== 'SyntaxError') {\n        throw e;\n      }\n    }\n  }\n  return (encoder || JSON.stringify)(rawValue);\n}\nconst defaults = {\n  transitional: _transitional.default,\n  adapter: ['xhr', 'http', 'fetch'],\n  transformRequest: [function transformRequest(data, headers) {\n    const contentType = headers.getContentType() || '';\n    const hasJSONContentType = contentType.indexOf('application/json') > -1;\n    const isObjectPayload = _utils.default.isObject(data);\n    if (isObjectPayload && _utils.default.isHTMLForm(data)) {\n      data = new FormData(data);\n    }\n    const isFormData = _utils.default.isFormData(data);\n    if (isFormData) {\n      return hasJSONContentType ? JSON.stringify((0, _formDataToJSON.default)(data)) : data;\n    }\n    if (_utils.default.isArrayBuffer(data) || _utils.default.isBuffer(data) || _utils.default.isStream(data) || _utils.default.isFile(data) || _utils.default.isBlob(data) || _utils.default.isReadableStream(data)) {\n      return data;\n    }\n    if (_utils.default.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (_utils.default.isURLSearchParams(data)) {\n      headers.setContentType('application/x-www-form-urlencoded;charset=utf-8', false);\n      return data.toString();\n    }\n    let isFileList;\n    if (isObjectPayload) {\n      if (contentType.indexOf('application/x-www-form-urlencoded') > -1) {\n        return (0, _toURLEncodedForm.default)(data, this.formSerializer).toString();\n      }\n      if ((isFileList = _utils.default.isFileList(data)) || contentType.indexOf('multipart/form-data') > -1) {\n        const _FormData = this.env && this.env.FormData;\n        return (0, _toFormData.default)(isFileList ? {\n          'files[]': data\n        } : data, _FormData && new _FormData(), this.formSerializer);\n      }\n    }\n    if (isObjectPayload || hasJSONContentType) {\n      headers.setContentType('application/json', false);\n      return stringifySafely(data);\n    }\n    return data;\n  }],\n  transformResponse: [function transformResponse(data) {\n    const transitional = this.transitional || defaults.transitional;\n    const forcedJSONParsing = transitional && transitional.forcedJSONParsing;\n    const JSONRequested = this.responseType === 'json';\n    if (_utils.default.isResponse(data) || _utils.default.isReadableStream(data)) {\n      return data;\n    }\n    if (data && _utils.default.isString(data) && (forcedJSONParsing && !this.responseType || JSONRequested)) {\n      const silentJSONParsing = transitional && transitional.silentJSONParsing;\n      const strictJSONParsing = !silentJSONParsing && JSONRequested;\n      try {\n        return JSON.parse(data);\n      } catch (e) {\n        if (strictJSONParsing) {\n          if (e.name === 'SyntaxError') {\n            throw _AxiosError.default.from(e, _AxiosError.default.ERR_BAD_RESPONSE, this, null, this.response);\n          }\n          throw e;\n        }\n      }\n    }\n    return data;\n  }],\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n  maxContentLength: -1,\n  maxBodyLength: -1,\n  env: {\n    FormData: _index.default.classes.FormData,\n    Blob: _index.default.classes.Blob\n  },\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  },\n  headers: {\n    common: {\n      'Accept': 'application/json, text/plain, */*',\n      'Content-Type': undefined\n    }\n  }\n};\n_utils.default.forEach(['delete', 'get', 'head', 'post', 'put', 'patch'], method => {\n  defaults.headers[method] = {};\n});\nvar _default = exports.default = defaults;"},"sourceMaps":null,"error":null,"hash":"1f8ceab8c21d410a5b1c38652ccee004","cacheData":{"env":{}}}