{"id":"../../node_modules/axios/lib/helpers/resolveConfig.js","dependencies":[{"name":"D:\\learning-projects\\js\\natours\\package.json","includedInParent":true,"mtime":1738789525091},{"name":"D:\\learning-projects\\js\\natours\\node_modules\\axios\\package.json","includedInParent":true,"mtime":1737806351315},{"name":"../platform/index.js","loc":{"line":1,"column":21,"index":21},"parent":"D:\\learning-projects\\js\\natours\\node_modules\\axios\\lib\\helpers\\resolveConfig.js","resolved":"D:\\learning-projects\\js\\natours\\node_modules\\axios\\lib\\platform\\index.js"},{"name":"../utils.js","loc":{"line":2,"column":18,"index":63},"parent":"D:\\learning-projects\\js\\natours\\node_modules\\axios\\lib\\helpers\\resolveConfig.js","resolved":"D:\\learning-projects\\js\\natours\\node_modules\\axios\\lib\\utils.js"},{"name":"./isURLSameOrigin.js","loc":{"line":3,"column":28,"index":106},"parent":"D:\\learning-projects\\js\\natours\\node_modules\\axios\\lib\\helpers\\resolveConfig.js","resolved":"D:\\learning-projects\\js\\natours\\node_modules\\axios\\lib\\helpers\\isURLSameOrigin.js"},{"name":"./cookies.js","loc":{"line":4,"column":20,"index":150},"parent":"D:\\learning-projects\\js\\natours\\node_modules\\axios\\lib\\helpers\\resolveConfig.js","resolved":"D:\\learning-projects\\js\\natours\\node_modules\\axios\\lib\\helpers\\cookies.js"},{"name":"../core/buildFullPath.js","loc":{"line":5,"column":26,"index":192},"parent":"D:\\learning-projects\\js\\natours\\node_modules\\axios\\lib\\helpers\\resolveConfig.js","resolved":"D:\\learning-projects\\js\\natours\\node_modules\\axios\\lib\\core\\buildFullPath.js"},{"name":"../core/mergeConfig.js","loc":{"line":6,"column":24,"index":244},"parent":"D:\\learning-projects\\js\\natours\\node_modules\\axios\\lib\\helpers\\resolveConfig.js","resolved":"D:\\learning-projects\\js\\natours\\node_modules\\axios\\lib\\core\\mergeConfig.js"},{"name":"../core/AxiosHeaders.js","loc":{"line":7,"column":25,"index":295},"parent":"D:\\learning-projects\\js\\natours\\node_modules\\axios\\lib\\helpers\\resolveConfig.js","resolved":"D:\\learning-projects\\js\\natours\\node_modules\\axios\\lib\\core\\AxiosHeaders.js"},{"name":"./buildURL.js","loc":{"line":8,"column":21,"index":343},"parent":"D:\\learning-projects\\js\\natours\\node_modules\\axios\\lib\\helpers\\resolveConfig.js","resolved":"D:\\learning-projects\\js\\natours\\node_modules\\axios\\lib\\helpers\\buildURL.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _index = _interopRequireDefault(require(\"../platform/index.js\"));\nvar _utils = _interopRequireDefault(require(\"../utils.js\"));\nvar _isURLSameOrigin = _interopRequireDefault(require(\"./isURLSameOrigin.js\"));\nvar _cookies = _interopRequireDefault(require(\"./cookies.js\"));\nvar _buildFullPath = _interopRequireDefault(require(\"../core/buildFullPath.js\"));\nvar _mergeConfig = _interopRequireDefault(require(\"../core/mergeConfig.js\"));\nvar _AxiosHeaders = _interopRequireDefault(require(\"../core/AxiosHeaders.js\"));\nvar _buildURL = _interopRequireDefault(require(\"./buildURL.js\"));\nfunction _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }\nvar _default = config => {\n  const newConfig = (0, _mergeConfig.default)({}, config);\n  let {\n    data,\n    withXSRFToken,\n    xsrfHeaderName,\n    xsrfCookieName,\n    headers,\n    auth\n  } = newConfig;\n  newConfig.headers = headers = _AxiosHeaders.default.from(headers);\n  newConfig.url = (0, _buildURL.default)((0, _buildFullPath.default)(newConfig.baseURL, newConfig.url), config.params, config.paramsSerializer);\n\n  // HTTP basic authentication\n  if (auth) {\n    headers.set('Authorization', 'Basic ' + btoa((auth.username || '') + ':' + (auth.password ? unescape(encodeURIComponent(auth.password)) : '')));\n  }\n  let contentType;\n  if (_utils.default.isFormData(data)) {\n    if (_index.default.hasStandardBrowserEnv || _index.default.hasStandardBrowserWebWorkerEnv) {\n      headers.setContentType(undefined); // Let the browser set it\n    } else if ((contentType = headers.getContentType()) !== false) {\n      // fix semicolon duplication issue for ReactNative FormData implementation\n      const [type, ...tokens] = contentType ? contentType.split(';').map(token => token.trim()).filter(Boolean) : [];\n      headers.setContentType([type || 'multipart/form-data', ...tokens].join('; '));\n    }\n  }\n\n  // Add xsrf header\n  // This is only done if running in a standard browser environment.\n  // Specifically not if we're in a web worker, or react-native.\n\n  if (_index.default.hasStandardBrowserEnv) {\n    withXSRFToken && _utils.default.isFunction(withXSRFToken) && (withXSRFToken = withXSRFToken(newConfig));\n    if (withXSRFToken || withXSRFToken !== false && (0, _isURLSameOrigin.default)(newConfig.url)) {\n      // Add xsrf header\n      const xsrfValue = xsrfHeaderName && xsrfCookieName && _cookies.default.read(xsrfCookieName);\n      if (xsrfValue) {\n        headers.set(xsrfHeaderName, xsrfValue);\n      }\n    }\n  }\n  return newConfig;\n};\nexports.default = _default;"},"sourceMaps":null,"error":null,"hash":"2ed0243003968a4db8c1b503f0883fc2","cacheData":{"env":{}}}