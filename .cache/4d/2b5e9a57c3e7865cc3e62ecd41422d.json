{"id":"../../node_modules/axios/lib/core/transformData.js","dependencies":[{"name":"D:\\learning-projects\\js\\natours\\package.json","includedInParent":true,"mtime":1738789525091},{"name":"D:\\learning-projects\\js\\natours\\node_modules\\axios\\package.json","includedInParent":true,"mtime":1737806351315},{"name":"./../utils.js","loc":{"line":3,"column":18,"index":33},"parent":"D:\\learning-projects\\js\\natours\\node_modules\\axios\\lib\\core\\transformData.js","resolved":"D:\\learning-projects\\js\\natours\\node_modules\\axios\\lib\\utils.js"},{"name":"../defaults/index.js","loc":{"line":4,"column":21,"index":71},"parent":"D:\\learning-projects\\js\\natours\\node_modules\\axios\\lib\\core\\transformData.js","resolved":"D:\\learning-projects\\js\\natours\\node_modules\\axios\\lib\\defaults\\index.js"},{"name":"../core/AxiosHeaders.js","loc":{"line":5,"column":25,"index":120},"parent":"D:\\learning-projects\\js\\natours\\node_modules\\axios\\lib\\core\\transformData.js","resolved":"D:\\learning-projects\\js\\natours\\node_modules\\axios\\lib\\core\\AxiosHeaders.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = transformData;\nvar _utils = _interopRequireDefault(require(\"./../utils.js\"));\nvar _index = _interopRequireDefault(require(\"../defaults/index.js\"));\nvar _AxiosHeaders = _interopRequireDefault(require(\"../core/AxiosHeaders.js\"));\nfunction _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }\n/**\n * Transform the data for a request or a response\n *\n * @param {Array|Function} fns A single function or Array of functions\n * @param {?Object} response The response object\n *\n * @returns {*} The resulting transformed data\n */\nfunction transformData(fns, response) {\n  const config = this || _index.default;\n  const context = response || config;\n  const headers = _AxiosHeaders.default.from(context.headers);\n  let data = context.data;\n  _utils.default.forEach(fns, function transform(fn) {\n    data = fn.call(config, data, headers.normalize(), response ? response.status : undefined);\n  });\n  headers.normalize();\n  return data;\n}"},"sourceMaps":null,"error":null,"hash":"a48360033a07781198134d49c1b177a5","cacheData":{"env":{}}}