{"id":"../../node_modules/axios/lib/core/dispatchRequest.js","dependencies":[{"name":"D:\\learning-projects\\js\\natours\\package.json","includedInParent":true,"mtime":1738789525091},{"name":"D:\\learning-projects\\js\\natours\\node_modules\\axios\\package.json","includedInParent":true,"mtime":1737806351315},{"name":"./transformData.js","loc":{"line":3,"column":26,"index":41},"parent":"D:\\learning-projects\\js\\natours\\node_modules\\axios\\lib\\core\\dispatchRequest.js","resolved":"D:\\learning-projects\\js\\natours\\node_modules\\axios\\lib\\core\\transformData.js"},{"name":"../cancel/isCancel.js","loc":{"line":4,"column":21,"index":84},"parent":"D:\\learning-projects\\js\\natours\\node_modules\\axios\\lib\\core\\dispatchRequest.js","resolved":"D:\\learning-projects\\js\\natours\\node_modules\\axios\\lib\\cancel\\isCancel.js"},{"name":"../defaults/index.js","loc":{"line":5,"column":21,"index":130},"parent":"D:\\learning-projects\\js\\natours\\node_modules\\axios\\lib\\core\\dispatchRequest.js","resolved":"D:\\learning-projects\\js\\natours\\node_modules\\axios\\lib\\defaults\\index.js"},{"name":"../cancel/CanceledError.js","loc":{"line":6,"column":26,"index":180},"parent":"D:\\learning-projects\\js\\natours\\node_modules\\axios\\lib\\core\\dispatchRequest.js","resolved":"D:\\learning-projects\\js\\natours\\node_modules\\axios\\lib\\cancel\\CanceledError.js"},{"name":"../core/AxiosHeaders.js","loc":{"line":7,"column":25,"index":235},"parent":"D:\\learning-projects\\js\\natours\\node_modules\\axios\\lib\\core\\dispatchRequest.js","resolved":"D:\\learning-projects\\js\\natours\\node_modules\\axios\\lib\\core\\AxiosHeaders.js"},{"name":"../adapters/adapters.js","loc":{"line":8,"column":21,"index":283},"parent":"D:\\learning-projects\\js\\natours\\node_modules\\axios\\lib\\core\\dispatchRequest.js","resolved":"D:\\learning-projects\\js\\natours\\node_modules\\axios\\lib\\adapters\\adapters.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = dispatchRequest;\nvar _transformData = _interopRequireDefault(require(\"./transformData.js\"));\nvar _isCancel = _interopRequireDefault(require(\"../cancel/isCancel.js\"));\nvar _index = _interopRequireDefault(require(\"../defaults/index.js\"));\nvar _CanceledError = _interopRequireDefault(require(\"../cancel/CanceledError.js\"));\nvar _AxiosHeaders = _interopRequireDefault(require(\"../core/AxiosHeaders.js\"));\nvar _adapters = _interopRequireDefault(require(\"../adapters/adapters.js\"));\nfunction _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }\n/**\n * Throws a `CanceledError` if cancellation has been requested.\n *\n * @param {Object} config The config that is to be used for the request\n *\n * @returns {void}\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n  if (config.signal && config.signal.aborted) {\n    throw new _CanceledError.default(null, config);\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n *\n * @returns {Promise} The Promise to be fulfilled\n */\nfunction dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n  config.headers = _AxiosHeaders.default.from(config.headers);\n\n  // Transform request data\n  config.data = _transformData.default.call(config, config.transformRequest);\n  if (['post', 'put', 'patch'].indexOf(config.method) !== -1) {\n    config.headers.setContentType('application/x-www-form-urlencoded', false);\n  }\n  const adapter = _adapters.default.getAdapter(config.adapter || _index.default.adapter);\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = _transformData.default.call(config, config.transformResponse, response);\n    response.headers = _AxiosHeaders.default.from(response.headers);\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!(0, _isCancel.default)(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = _transformData.default.call(config, config.transformResponse, reason.response);\n        reason.response.headers = _AxiosHeaders.default.from(reason.response.headers);\n      }\n    }\n    return Promise.reject(reason);\n  });\n}"},"sourceMaps":null,"error":null,"hash":"f8c651bd92babdee9390358e14fcca02","cacheData":{"env":{}}}