{"id":"../../node_modules/core-js/modules/es7.promise.finally.js","dependencies":[{"name":"D:\\learning-projects\\js\\natours\\package.json","includedInParent":true,"mtime":1738789525091},{"name":"D:\\learning-projects\\js\\natours\\node_modules\\core-js\\package.json","includedInParent":true,"mtime":1738582554313},{"name":"./_export","loc":{"line":3,"column":22,"index":88},"parent":"D:\\learning-projects\\js\\natours\\node_modules\\core-js\\modules\\es7.promise.finally.js","resolved":"D:\\learning-projects\\js\\natours\\node_modules\\core-js\\modules\\_export.js"},{"name":"./_core","loc":{"line":4,"column":19,"index":121},"parent":"D:\\learning-projects\\js\\natours\\node_modules\\core-js\\modules\\es7.promise.finally.js","resolved":"D:\\learning-projects\\js\\natours\\node_modules\\core-js\\modules\\_core.js"},{"name":"./_global","loc":{"line":5,"column":21,"index":154},"parent":"D:\\learning-projects\\js\\natours\\node_modules\\core-js\\modules\\es7.promise.finally.js","resolved":"D:\\learning-projects\\js\\natours\\node_modules\\core-js\\modules\\_global.js"},{"name":"./_species-constructor","loc":{"line":6,"column":33,"index":201},"parent":"D:\\learning-projects\\js\\natours\\node_modules\\core-js\\modules\\es7.promise.finally.js","resolved":"D:\\learning-projects\\js\\natours\\node_modules\\core-js\\modules\\_species-constructor.js"},{"name":"./_promise-resolve","loc":{"line":7,"column":29,"index":257},"parent":"D:\\learning-projects\\js\\natours\\node_modules\\core-js\\modules\\es7.promise.finally.js","resolved":"D:\\learning-projects\\js\\natours\\node_modules\\core-js\\modules\\_promise-resolve.js"}],"generated":{"js":"\n// https://github.com/tc39/proposal-promise-finally\n'use strict';\nvar $export = require('./_export');\nvar core = require('./_core');\nvar global = require('./_global');\nvar speciesConstructor = require('./_species-constructor');\nvar promiseResolve = require('./_promise-resolve');\n\n$export($export.P + $export.R, 'Promise', { 'finally': function (onFinally) {\n  var C = speciesConstructor(this, core.Promise || global.Promise);\n  var isFunction = typeof onFinally == 'function';\n  return this.then(\n    isFunction ? function (x) {\n      return promiseResolve(C, onFinally()).then(function () { return x; });\n    } : onFinally,\n    isFunction ? function (e) {\n      return promiseResolve(C, onFinally()).then(function () { throw e; });\n    } : onFinally\n  );\n} });\n"},"sourceMaps":null,"error":null,"hash":"fc13c8eb43cd67daadeac30e18d8d956","cacheData":{"env":{}}}